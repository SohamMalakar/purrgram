
def merge(arr, l, m, r):
    var n1 = m - l + 1;
    var n2 = r - m;

    var L = [0] * (n1);
    var R = [0] * (n2);

    var i = 0;

    while i < n1:
        L[i] = arr[l + i];
        i = i + 1;
    end

    var j = 0;

    while j < n2:
        R[j] = arr[m + 1 + j];
        j = j + 1;
    end

    i = 0;
    j = 0;
    var k = l;

    while i < n1 and j < n2:
        if L[i] <= R[j]:
            arr[k] = L[i];
            i = i + 1;
        else:
            arr[k] = R[j];
            j = j + 1;
        end
        k = k + 1;
    end

    while i < n1:
        arr[k] = L[i];
        i = i + 1;
        k = k + 1;
    end

    while j < n2:
        arr[k] = R[j];
        j = j + 1;
        k = k + 1;
    end
end


def mergeSort(arr, l, r):
    var m;
    if l < r:
        m = l+(r-l)//2;

        mergeSort(arr, l, m);
        mergeSort(arr, m+1, r);
        merge(arr, l, m, r);
    end
end

var arr = [12, 11, 13, 5, 6, 7];
var n = len(arr);
print("Given array is\n");

var i = 0;

while i < n:
    print(arr[i], " ");
    i = i + 1;
end

mergeSort(arr, 0, n-1);
print("\n\nSorted array is\n");

i = 0;

while i < n:
    print(arr[i], " ");
    i = i + 1;
end
